[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "redinsight"
version = "1.0.0"
description = "Reddit数据分析工具 - 抓取Reddit数据并使用大模型进行分析"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "RedInsight Team", email = "redinsight@example.com"}
]
maintainers = [
    {name = "RedInsight Team", email = "redinsight@example.com"}
]
keywords = ["reddit", "data-analysis", "llm", "ai", "scraping", "sentiment-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "praw>=7.7.1",
    "sqlalchemy>=2.0.23",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pandas>=2.1.4",
    "numpy>=1.24.3",
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    "aiohttp>=3.9.1",
    "schedule>=1.2.0",
    "streamlit>=1.28.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
gui = [
    "streamlit>=1.28.0",
]

[project.urls]
Homepage = "https://github.com/chaos-of-dawn/RedInsight"
Repository = "https://github.com/chaos-of-dawn/RedInsight"
Documentation = "https://github.com/chaos-of-dawn/RedInsight#readme"
"Bug Tracker" = "https://github.com/chaos-of-dawn/RedInsight/issues"

[project.scripts]
redinsight = "main:main"
redinsight-launcher = "launcher:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "venv*", "__pycache__*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "praw.*",
    "streamlit.*",
    "anthropic.*",
    "openai.*",
]
ignore_missing_imports = true
